type Query {
  hello(name: String): String
  getChats: [Chat]
  getMessages(chatId: String!): Chat
  getUsers: UserRes
}

type Mutation {
  register(name:String!,email: String!, password: String!): AuthRes
  login(email: String!, password: String!): AuthRes
  createChat(membersId: [String]!, name: String): Error!
  createMessage(chatId: String!, text: String!): Error!
}

type Subscription {
  getNewMessages(chatId: String): Message
}

type UserRes {
  users: [User]
  error: Error
}

type Error {
  path: String!
  message: String!
}

type AuthRes {
  error: Error
  token: String
  id: String
}

type Chat {
  id: String
  members: [User]
  messages: [Message]
  name: String
  lastMessage: String
}

type Message {
  id: String
  text: String
  sender: User
  me: Boolean
}

type User {
  id: String
  name:String
  email: String
}
